<?php

namespace Ecommerce\EcommerceBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Partenaires
 *
 * @ORM\Table("partenaires")
 * @ORM\Entity(repositoryClass="Ecommerce\EcommerceBundle\Repository\PartenairesRepository")
 */
class Partenaires
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\OneToMany(targetEntity="Ecommerce\EcommerceBundle\Entity\Produits", mappedBy="partenaire", cascade={"persist","remove"})
     * @ORM\JoinColumn(nullable=true)
     */
    private $produits;

    /**
     * @ORM\OneToMany(targetEntity="Ecommerce\EcommerceBundle\Entity\Garanties", mappedBy="partenaire", cascade={"persist","remove"})
     * @ORM\JoinColumn(nullable=true)
     */
    private $garanties;

    /**
     * @ORM\OneToOne(targetEntity="Ecommerce\EcommerceBundle\Entity\Media", cascade={"persist","remove"})
     * @ORM\JoinColumn(nullable=true)
     */
    private $image;

    /**
     * @var string
     *
     * @ORM\Column(name="nom", type="string", length=100)
     */
    private $nom;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->produits = new \Doctrine\Common\Collections\ArrayCollection();
        $this->garanties = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nom
     *
     * @param string $nom
     * @return Partenaires
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get nom
     *
     * @return string 
     */
    public function getNom()
    {
        return $this->nom;
    }

    /**
     * Add produits
     *
     * @param \Ecommerce\EcommerceBundle\Entity\Produits $produits
     * @return Partenaires
     */
    public function addProduit(\Ecommerce\EcommerceBundle\Entity\Produits $produits)
    {
        $this->produits[] = $produits;

        return $this;
    }

    /**
     * Remove produits
     *
     * @param \Ecommerce\EcommerceBundle\Entity\Produits $produits
     */
    public function removeProduit(\Ecommerce\EcommerceBundle\Entity\Produits $produits)
    {
        $this->produits->removeElement($produits);
    }

    /**
     * Get produits
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getProduits()
    {
        return $this->produits;
    }

    /**
     * Add garanties
     *
     * @param \Ecommerce\EcommerceBundle\Entity\Garanties $garanties
     * @return Partenaires
     */
    public function addGaranty(\Ecommerce\EcommerceBundle\Entity\Garanties $garanties)
    {
        $this->garanties[] = $garanties;

        return $this;
    }

    /**
     * Remove garanties
     *
     * @param \Ecommerce\EcommerceBundle\Entity\Garanties $garanties
     */
    public function removeGaranty(\Ecommerce\EcommerceBundle\Entity\Garanties $garanties)
    {
        $this->garanties->removeElement($garanties);
    }

    /**
     * Get garanties
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getGaranties()
    {
        return $this->garanties;
    }

    /**
     * Set image
     *
     * @param \Ecommerce\EcommerceBundle\Entity\Media $image
     * @return Partenaires
     */
    public function setImage(\Ecommerce\EcommerceBundle\Entity\Media $image = null)
    {
        $this->image = $image;

        return $this;
    }

    /**
     * Get image
     *
     * @return \Ecommerce\EcommerceBundle\Entity\Media 
     */
    public function getImage()
    {
        return $this->image;
    }
}
