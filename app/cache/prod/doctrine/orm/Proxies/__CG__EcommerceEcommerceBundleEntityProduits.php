<?php

namespace Proxies\__CG__\Ecommerce\EcommerceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Produits extends \Ecommerce\EcommerceBundle\Entity\Produits implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'id', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'image', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'garantie', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'subCategorie', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'partenaire', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'descriptions', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'commentaires', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'nom', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'prix', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'quantite', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'reduction'];
        }

        return ['__isInitialized__', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'id', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'image', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'garantie', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'subCategorie', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'partenaire', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'descriptions', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'commentaires', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'nom', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'prix', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'quantite', '' . "\0" . 'Ecommerce\\EcommerceBundle\\Entity\\Produits' . "\0" . 'reduction'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Produits $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrix($prix)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrix', [$prix]);

        return parent::setPrix($prix);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrix', []);

        return parent::getPrix();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantite($quantite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantite', [$quantite]);

        return parent::setQuantite($quantite);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantite', []);

        return parent::getQuantite();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(\Ecommerce\EcommerceBundle\Entity\Media $image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubCategorie(\Ecommerce\EcommerceBundle\Entity\SubCategories $subCategorie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubCategorie', [$subCategorie]);

        return parent::setSubCategorie($subCategorie);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubCategorie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubCategorie', []);

        return parent::getSubCategorie();
    }

    /**
     * {@inheritDoc}
     */
    public function getGarantie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGarantie', []);

        return parent::getGarantie();
    }

    /**
     * {@inheritDoc}
     */
    public function getPartenaire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartenaire', []);

        return parent::getPartenaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartenaire($partenaire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartenaire', [$partenaire]);

        return parent::setPartenaire($partenaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptions', []);

        return parent::getDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescriptions($descriptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescriptions', [$descriptions]);

        return parent::setDescriptions($descriptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentaires()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentaires', []);

        return parent::getCommentaires();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentaires($commentaires)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentaires', [$commentaires]);

        return parent::setCommentaires($commentaires);
    }

    /**
     * {@inheritDoc}
     */
    public function setGarantie($garantie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGarantie', [$garantie]);

        return parent::setGarantie($garantie);
    }

    /**
     * {@inheritDoc}
     */
    public function addDescription(\Ecommerce\EcommerceBundle\Entity\Descriptions $description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDescription', [$description]);

        return parent::addDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDescription(\Ecommerce\EcommerceBundle\Entity\Descriptions $description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDescription', [$description]);

        return parent::removeDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function addCommentaire(\Ecommerce\EcommerceBundle\Entity\Commentaires $commentaires)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCommentaire', [$commentaires]);

        return parent::addCommentaire($commentaires);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCommentaire(\Ecommerce\EcommerceBundle\Entity\Commentaires $commentaires)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCommentaire', [$commentaires]);

        return parent::removeCommentaire($commentaires);
    }

    /**
     * {@inheritDoc}
     */
    public function getReduction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReduction', []);

        return parent::getReduction();
    }

    /**
     * {@inheritDoc}
     */
    public function setReduction($reduction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReduction', [$reduction]);

        return parent::setReduction($reduction);
    }

}
